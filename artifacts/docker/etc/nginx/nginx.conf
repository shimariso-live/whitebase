user nginx nginx;
worker_processes 1;

error_log /var/log/nginx/error_log error;

events {
        worker_connections 1024;
        use epoll;
}

http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main
                '$remote_addr - $remote_user [$time_local] '
                '"$request" $status $bytes_sent '
                '"$http_referer" "$http_user_agent" '
                '"$gzip_ratio"';

        client_header_timeout 10m;
        client_body_timeout 10m;
        client_max_body_size 256m;
        send_timeout 10m;

        connection_pool_size 256;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 2k;
        request_pool_size 4k;

        gzip on;
        gzip_min_length 1100;
        gzip_buffers 4 8k;
        gzip_types text/plain;

        output_buffers 1 32k;
        postpone_output 1460;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;

        keepalive_timeout 75 20;

        ignore_invalid_headers on;

        index index.html;

        proxy_cache_path /var/cache/nginx keys_zone=zone1:4m;

        map $host $upstream {
                include proxy.map;
        }

        resolver 127.0.0.53 valid=30s;

        map $http_upgrade $connection_upgrade {
                default upgrade;
                ''      close;
        }

        server {
                listen 80 default_server;
                listen [::]:80 default_server;
                server_name _;

                error_page 418 = @proxy;
                set $do_proxy "true";

                if ($upstream = none) { set $do_proxy "false"; }
                if ($request_uri ~* ^/.well-known/acme-challenge(/|$)) { set $do_proxy "false"; }
                if ($do_proxy = "true") { return 418; }

                location @proxy {
			proxy_buffering off;
			proxy_pass $upstream;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $remote_addr;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Port $server_port;
                }

                location / {
                        allow 127.0.0.1;
                        allow ::1;
                        allow 10.0.0.0/8;
                        allow 172.16.0.0/12;
                        allow 192.168.0.0/16;
                        allow 169.254.0.0/16;
                        allow fc00::/7;
                        allow fe80::/10;
                        deny all;
                        location /status {
                                stub_status on;
                        }
                        location /info {
                                uwsgi_pass unix:/run/uwsgi_info/info.socket;
                        }
                        location /.well-known {
                                allow all;
                        }
                        root /var/www/localhost/htdocs;
                }

                access_log /var/log/nginx/localhost.access_log main;
                error_log /var/log/nginx/localhost.error_log error;
        }

        include /etc/nginx/conf.d/*.conf;
}

stream {
        proxy_protocol off;
}
